apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ include "demo-web.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels: {{- include "common.labels.standard" (dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
  annotations:
    {{- with (mergeOverwrite (deepCopy .Values.global.deployAnnotations) .Values.deployAnnotations) }}
    {{- range $key, $value := . }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
    {{- end }}
    {{- if .Values.global.stakater.enabled }}
    {{- if .Values.global.stakater.auto }}
    reloader.stakater.com/auto: "true"
    {{- else }}
    reloader.stakater.com/search: "true"
    {{- end }}
    {{- end }}
spec:
  {{- with include "demo-web.strategy" (mergeOverwrite (deepCopy .Values.global.deploymentStrategy) .Values.deploymentStrategy) }}
  strategy:
    {{- trim . | nindent 4 }}
  {{- end }}
  {{- if .Values.rollouts.enabled }}
  replicas: 0
  {{- else if not .Values.autoscaling.enabled }}
  replicas: {{ default 1 .Values.replicaCount }}
  {{- end }}
  revisionHistoryLimit: {{ default 10 .Values.global.revisionHistoryLimit }}
  {{- $podLabels := include "common.tplvalues.merge" (dict "values" ( list .Values.podLabels .Values.commonLabels ) "context" . ) }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" (dict "customLabels" $podLabels "context" $ ) | nindent 6 }}
  template:
    metadata:
      annotations:
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}    
      labels: {{- include "common.labels.pods" (dict "customLabels" $podLabels "context" $ ) | nindent 8 }}
        {{- with (mergeOverwrite (deepCopy .Values.global.podLabels) .Values.podLabels) }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets | default .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.priorityClassName | default .Values.global.priorityClassName }}
      priorityClassName: {{ . }}
      {{- end }}
      serviceAccountName: {{ include "demo-web.serviceAccountName" . }}
      automountServiceAccountToken: {{ default false .Values.automountServiceAccountToken }}
      {{- if .Values.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      containers:
        - name: demo-web
          {{- if .Values.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          image: {{ include "demo-web.image" . }}
          imagePullPolicy: {{ coalesce .Values.image.pullPolicy .Values.global.image.imagePullPolicy "Always" }}
          {{- if .Values.overrideCommand }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.overrideCommand  "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.overrideCommandArgs }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.overrideCommandArgs "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.lifecycleHooks }}
          lifecycle: {{- include "common.tplvalues.render" (dict "value" .Values.lifecycleHooks "context" $) | nindent 12 }}
          {{- end }}
          env:    
          - name: TEST
            value: "OK"
          {{- if .Values.extraEnvVars }}
          {{- include "common.tplvalues.render" (dict "value" .Values.extraEnvVars "context" $) | nindent 10 }}
          {{- end }}
          envFrom:
          {{- if .Values.extraEnvVarsCM }}
          - configMapRef:
              name: {{ include "common.tplvalues.render" (dict "value" .Values.extraEnvVarsCM "context" $) }}
          {{- end }}
          {{- if .Values.extraEnvVarsSecret }}
          - secretRef:
              name: {{ include "common.tplvalues.render" (dict "value" .Values.extraEnvVarsSecret "context" $) }}
          {{- end }}
          ports:
            - containerPort: {{ .Values.service.targetPort }}
              name: http
              protocol: TCP
          {{- if .Values.customLivenessProbe }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.customLivenessProbe "context" $) | nindent 12 }}
          {{- else if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ default "/management/health/liveness" .Values.livenessProbe.path | quote }}
              port: http
            initialDelaySeconds: {{ default 0 .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ default 10 .Values.livenessProbe.periodSeconds }}
            failureThreshold: {{ default 3 .Values.livenessProbe.failureThreshold }}
            successThreshold: {{ default 1 .Values.livenessProbe.successThreshold }}
            timeoutSeconds: {{ default 5 .Values.livenessProbe.timeoutSeconds }}
          {{- end }}
          {{- if .Values.customReadinessProbe }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.customReadinessProbe "context" $) | nindent 12 }}
          {{- else if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ default "/management/health/readiness" .Values.readinessProbe.path }}
              port: http
            initialDelaySeconds: {{ default 0 .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ default 10 .Values.readinessProbe.periodSeconds }}
            failureThreshold: {{ default 3 .Values.readinessProbe.failureThreshold }}
            successThreshold: {{ default 1 .Values.readinessProbe.successThreshold }}
            timeoutSeconds: {{ default 5 .Values.readinessProbe.timeoutSeconds }}
          {{- end }}
          {{- if .Values.customStartupProbe }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" .Values.customStartupProbe "context" $) | nindent 12 }}
          {{- else if .Values.startupProbe.enabled }}
          startupProbe:
            httpGet:
              path: {{ default "/management/health/liveness" .Values.startupProbe.path }}
              port: http
            initialDelaySeconds: {{ default 0 .Values.startupProbe.initialDelaySeconds }}
            periodSeconds: {{ default 3 .Values.startupProbe.periodSeconds }}
            failureThreshold: {{ default 20 .Values.startupProbe.failureThreshold }}
            successThreshold: {{ default 1 .Values.startupProbe.successThreshold }}
            timeoutSeconds: {{ default 5 .Values.startupProbe.timeoutSeconds }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- if .Values.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.tolerations "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.schedulerName }}
      schedulerName: {{ .Values.schedulerName | quote }}
      {{- end }}
      {{- if .Values.topologySpreadConstraints }}
      topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" .Values.topologySpreadConstraints "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.hostAliases }}
      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity: {{- include "common.tplvalues.render" (dict "value" .Values.affinity "context" $) | nindent 8 }}
      {{- end }}